<?php

namespace Richpolis\FrontendBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Richpolis\BackendBundle\Entity\Edificio;
use Richpolis\BackendBundle\Entity\Usuario;
use Richpolis\BackendBundle\Entity\Recurso;

/**
 * ReservacionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReservacionRepository extends EntityRepository
{
    public function queryFindReservacionesPorRecursoPorFecha(Recurso $recurso,$month,$year) {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery("SELECT s,i,u,e "
                . "FROM FrontendBundle:Reservacion s "
                . "JOIN s.recurso i "
                . "JOIN s.usuario u "
                . "JOIN u.edificio e "
                . "WHERE i.id=:recurso "
		. "AND s.fechaEvento BETWEEN :inicio AND :fin "
                . "ORDER BY s.createdAt DESC");
        $consulta->setParameters(array(
            'usuario' => $recurso->getId(),
            'inicio'=>"$year-$month-01 00:00:00",
            'fin'=>"$year-$month-31 23:59:59",
        ));
        return $consulta;
    }

    public function findReservacionesPorRecursoPorFecha(Recurso $recurso,$month,$year) {
        return $this->queryFindReservacionesPorRecursoPorFecha($recurso,$month,$year)->getResult();
    }
    
    public function queryFindReservacionesPorEdificio(Edificio $edificio) {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery("SELECT s,i,u,e "
                . "FROM FrontendBundle:Reservacion s "
                . "JOIN s.recurso i "
                . "JOIN s.usuario u "
                . "JOIN u.edificio e "
                . "WHERE e.id=:edificio "
                . "ORDER BY s.createdAt DESC");
        $consulta->setParameters(array(
            'edificio' => $edificio->getId(),
        ));
        return $consulta;
    }

    public function findReservacionesPorEdificio(Edificio $edificio) {
        return $this->queryFindReservacionesPorEdificio($edificio)->getResult();
    }
    
    public function queryFindReservacionesPorUsuario(Usuario $usuario) {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery("SELECT s,i,u,e "
                . "FROM FrontendBundle:Reservacion s "
                . "JOIN s.recurso i "
                . "JOIN s.usuario u "
                . "JOIN u.edificio e "
                . "WHERE u.id=:usuario "
                . "ORDER BY s.createdAt DESC");
        $consulta->setParameters(array(
            'usuario' => $usuario->getId(),
        ));
        return $consulta;
    }

    public function findReservacionesPorUsuario(Usuario $usuario) {
        return $this->queryFindReservacionesPorUsuario($usuario)->getResult();
    }
	
    public function queryFindReservacionesPorUsuarioPorFecha(Usuario $usuario, $month, $year) {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery("SELECT s,i,u,e "
                . "FROM FrontendBundle:Reservacion s "
                . "JOIN s.recurso i "
                . "JOIN s.usuario u "
                . "JOIN u.edificio e "
                . "WHERE u.id=:usuario "
                . "AND s.fechaEvento BETWEEN :inicio AND :fin "
                . "ORDER BY s.createdAt DESC");
        $consulta->setParameters(array(
            'usuario' => $usuario->getId(),
            'inicio' => "$year-$month-01 00:00:00",
            'fin' => "$year-$month-31 23:59:59",
        ));
        return $consulta;
    }

    public function findReservacionesPorUsuarioPorFecha(Usuario $usuario,$month,$year) {
        return $this->queryFindReservacionesPorUsuarioPorFecha($usuario,$month,$year)->getResult();
    }
}
