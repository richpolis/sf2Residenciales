<?php

namespace Richpolis\FrontendBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Richpolis\FrontendBundle\Entity\Foro;
use Richpolis\BackendBundle\Entity\Edificio;
use Richpolis\BackendBundle\Entity\Residencial;

/**
 * ForoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ForoRepository extends EntityRepository
{
    public function queryFindForosPorEdificio(Edificio $edificio,$buscar="") {
        $em = $this->getEntityManager();
        if(strlen($buscar)==0){
            $consulta = $em->createQuery("SELECT f,u,e,r "
                    . "FROM FrontendBundle:Foro f "
                    . "JOIN f.usuario u "
                    . "JOIN f.edificios e "
                    . "JOIN f.residencial r "
                    . "WHERE (e.id = :edificio AND f.tipoAcceso=:tipoAccesoEdificio ) "
                    . "OR (r.id=:residencial AND f.tipoAcceso=:tipoAccesoResidencial ) "
                    . "ORDER BY f.createdAt DESC");
            $consulta->setParameters(array(
                'edificio' => $edificio->getId(),
                'residencial' => $edificio->getResidencial()->getId(),
                'tipoAccesoEdificio' => Foro::TIPO_ACCESO_EDIFICIO,
                'tipoAccesoResidencial' => Foro::TIPO_ACCESO_RESIDENCIAL,
            ));
        }else{
            $consulta = $em->createQuery("SELECT f,u,e,r "
                    . "FROM FrontendBundle:Foro f "
                    . "JOIN f.usuario u "
                    . "JOIN f.edificios e "
                    . "JOIN f.residencial r "
                    . "WHERE (e.id = :edificio AND f.tipoAcceso=:tipoAccesoEdificio ) "
                    . "OR (r.id=:residencial AND f.tipoAcceso=:tipoAccesoResidencial ) "
                    . "AND (u.numero =:numero OR u.nombre LIKE :nombre OR u.email LIKE :email OR f.titulo LIKE :titulo) "
                    . "ORDER BY f.createdAt DESC, u.numero ASC");
            $consulta->setParameters(array(
                'edificio' => $edificio->getId(),
                'residencial' => $edificio->getResidencial()->getId(),
                'tipoAccesoEdificio' => Foro::TIPO_ACCESO_EDIFICIO,
                'tipoAccesoResidencial' => Foro::TIPO_ACCESO_RESIDENCIAL,
                'numero' => $buscar,
                'nombre' => "%" . $buscar . "%",
                'email' => "%" . $buscar . "%",
                'titulo' => "%" . $buscar . "%"
            ));
        }
        return $consulta;
    }

    public function findForosPorEdificio(Edificio $edificio,$buscar="") {
        return $this->queryFindForosPorEdificio($edificio,$buscar)->getResult();
    }
    
    public function queryFindForosPorResidencial(Residencial $residencial,$buscar="") {
        $em = $this->getEntityManager();
        if(strlen($buscar)==0){
            $consulta = $em->createQuery("SELECT f,u,e,r "
                . "FROM FrontendBundle:Foro f "
                . "JOIN f.usuario u "
                . "JOIN f.edificios e "
                . "JOIN f.residencial r "
                . "WHERE r.id =:residencial "
                . "ORDER BY f.createdAt DESC");
            $consulta->setParameters(array(
                'residencial' => $residencial->getId()
            ));
        }else{
            $consulta = $em->createQuery("SELECT f,u,e,r "
                . "FROM FrontendBundle:Foro f "
                . "JOIN f.usuario u "
                . "JOIN f.edificios e "
                . "JOIN f.residencial r "
                . "WHERE r.id =:residencial "
                . "AND (u.numero =:numero OR u.nombre LIKE :nombre OR u.email LIKE :email OR f.titulo LIKE :titulo) "
                . "ORDER BY f.createdAt DESC, u.numero ASC");
            $consulta->setParameters(array(
                'residencial' => $residencial->getId(),
                'numero' => $buscar,
                'nombre' => "%" . $buscar . "%",
                'email' => "%" . $buscar . "%",
                'titulo' => "%" . $buscar . "%"
            ));
        } 
        return $consulta;
    }

    public function findForosPorResidencial(Residencial $residencial,$buscar="") {
        return $this->queryFindForosPorResidencial($residencial,$buscar)->getResult();
    }
}
