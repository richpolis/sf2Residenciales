<?php

namespace Richpolis\FrontendBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Richpolis\BackendBundle\Entity\Edificio;
use Richpolis\BackendBundle\Entity\Usuario;
use Richpolis\FrontendBundle\Entity\Aviso;

/**
 * AvisoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AvisoRepository extends EntityRepository
{
    public function queryFindAvisosPorEdificio(Edificio $edificio,$buscar="") {
        $em = $this->getEntityManager();
        if(strlen($buscar)==0){
            $consulta = $em->createQuery("SELECT a,u,e,r "
                    . "FROM FrontendBundle:Aviso a "
                    . "JOIN a.edificios e "
                    . "JOIN a.residencial r "
                    . "JOIN a.usuario u "
                    . "WHERE (e.id = :edificio AND (a.tipoAcceso=:tipoAccesoEdificio OR a.tipoAcceso=:tipoAccesoUsuario)) "
                    . "OR (r.id=:residencial AND a.tipoAcceso=:tipoAccesoResidencial ) "
                    . "ORDER BY a.createdAt DESC");
            $consulta->setParameters(array(
                'edificio' => $edificio->getId(),
                'residencial' => $edificio->getResidencial()->getId(),
                'tipoAccesoResidencial'=>Aviso::TIPO_ACCESO_RESIDENCIAL,
                'tipoAccesoEdificio'=>Aviso::TIPO_ACCESO_EDIFICIO,
                'tipoAccesoUsuario'=>Aviso::TIPO_ACCESO_PRIVADO,
            ));
        }else{
            $consulta = $em->createQuery("SELECT a,u,e,r "
                    . "FROM FrontendBundle:Aviso a "
                    . "JOIN a.edificios e "
                    . "JOIN a.residencial r "
                    . "JOIN a.usuario u "
                    . "WHERE (e.id = :edificio AND (a.tipoAcceso=:tipoAccesoEdificio OR a.tipoAcceso=:tipoAccesoUsuario)) "
                    . "OR (r.id=:residencial AND a.tipoAcceso=:tipoAccesoResidencial ) "
                    . "AND (u.numero =:numero OR u.nombre LIKE :nombre OR u.email LIKE :email OR a.titulo LIKE :titulo) "
                    . "ORDER BY a.createdAt DESC, u.numero ASC");
            $consulta->setParameters(array(
                'edificio' => $edificio->getId(),
                'residencial' => $edificio->getResidencial()->getId(),
                'tipoAccesoResidencial'=>Aviso::TIPO_ACCESO_RESIDENCIAL,
                'tipoAccesoEdificio'=>Aviso::TIPO_ACCESO_EDIFICIO,
                'tipoAccesoUsuario'=>Aviso::TIPO_ACCESO_PRIVADO,
                'numero' => $buscar,
                'nombre' => "%" . $buscar . "%",
                'email' => "%" . $buscar . "%",
                'titulo' => "%" . $buscar . "%"
            ));
        }
        return $consulta;
    }

    public function findAvisosPorEdificio(Edificio $edificio,$buscar="") {
        return $this->queryFindAvisosPorEdificio($edificio,$buscar="")->getResult();
    }
    
    public function queryFindAvisosPorUsuario(Usuario $usuario) {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery("SELECT a,u,e,r "
                . "FROM FrontendBundle:Aviso a "
                . "JOIN a.usuario u "
                . "JOIN a.edificios e "
                . "JOIN a.residencial r "
                . "WHERE (e.id = :edificio AND a.tipoAcceso=:tipoAccesoEdificio ) "
                . "OR (r.id=:residencial AND a.tipoAcceso=:tipoAccesoResidencial ) "
                . "OR (u.id=:usuario AND a.tipoAcceso=:tipoAccesoUsuario ) "
                . "ORDER BY a.createdAt DESC");
        $consulta->setParameters(array(
            'usuario' => $usuario->getId(),
            'edificio' => $usuario->getEdificio()->getId(),
            'residencial' => $usuario->getEdificio()->getResidencial()->getId(),
            'tipoAccesoResidencial'=>Aviso::TIPO_ACCESO_RESIDENCIAL,
            'tipoAccesoEdificio'=>Aviso::TIPO_ACCESO_EDIFICIO,
            'tipoAccesoUsuario'=>Aviso::TIPO_ACCESO_PRIVADO,
        ));
        return $consulta;
    }

    public function findAvisosPorUsuario(Usuario $usuario,$max = 0) {
        if($max>0){
            return $this->queryFindAvisosPorUsuario($usuario)->setMaxResults($max)->getResult();
        }else{
            return $this->queryFindAvisosPorUsuario($usuario)->getResult();
        }
    }
	
	public function queryFindAvisosPorUsuarioPorFecha(Usuario $usuario,$month,$year) {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery("SELECT a,u,e,r "
                . "FROM FrontendBundle:Aviso a "
                . "JOIN a.usuario u "
                . "JOIN a.edificios e "
                . "JOIN a.residencial r "
                . "WHERE (e.id = :edificio AND a.tipoAcceso=:tipoAccesoEdificio ) "
                . "OR (r.id=:residencial AND a.tipoAcceso=:tipoAccesoResidencial ) "
                . "OR (u.id=:usuario AND a.tipoAcceso=:tipoAccesoUsuario ) "
		        . "AND a.createdAt BETWEEN :inicio AND :fin "
                . "ORDER BY a.createdAt DESC");
        $consulta->setParameters(array(
            'usuario' => $usuario->getId(),
            'edificio' => $usuario->getEdificio()->getId(),
            'residencial' => $usuario->getEdificio()->getResidencial()->getId(),
            'tipoAccesoResidencial'=>Aviso::TIPO_ACCESO_RESIDENCIAL,
            'tipoAccesoEdificio'=>Aviso::TIPO_ACCESO_EDIFICIO,
            'tipoAccesoUsuario'=>Aviso::TIPO_ACCESO_PRIVADO,
            'inicio'=>"$year-$month-01 00:00:00",
            'fin'=>"$year-$month-31 23:59:59",
        ));
        return $consulta;
    }

    public function findAvisosPorUsuarioPorFecha(Usuario $usuario,$month,$year) {
        return $this->queryFindAvisosPorUsuarioPorFecha($usuario,$month,$year)->getResult();
    }
}
